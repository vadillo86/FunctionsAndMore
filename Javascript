Javascript

---ONLY NUMBER AND COMMA FUNCTION---
        ---onkeypress---
        
function numberValidation(e, field) {
    key = e.keyCode ? e.keyCode : e.which;
    if (key === 8)
        return true;
    if (field.value !== "") {
        if ((field.value.indexOf(",")) > 0) {
            if (key > 47 && key < 58) {
                if (field.value === "")
                    return true;
                regexp = /[0-9]{1,10}[,][0-9]{1,3}$/;
                regexp = /[0-9]{2}$/;
                return !(regexp.test(field.value))
            }
        }
    }
    if (key > 47 && key < 58) {
        if (field.value === "")
            return true;
        regexp = /[0-9]{10}/;
        return !(regexp.test(field.value));
    }
    if (key === 44) {
        if (field.value === "")
            return false;
        regexp = /(?:\d*\,)?\d+/g;
        if (field.value.indexOf(',') > -1) {
            regexp = /^[0-9]+$/;
        }
        return regexp.test(field.value);
    }
    return false;
};
    
    ---FORMAT NUMBER FUNCTION (MILES WITH POINTS)---
            ---onkeydown---
            
function formatNumber(e) {

    var numComme = e.value;

    if (!numComme.indexOf(',') > -1) {
        var beforeComma = e.value.replace(/\./g, '');

        beforeComma = beforeComma.toString().split('').reverse().join('').replace(/(?=\d*\.?)(\d{3})/g, '$1.');
        beforeComma = beforeComma.split('').reverse().join('').replace(/^[\.]/, '');
        e.value = beforeComma;
    }
    if (numComme.indexOf(',') > -1) {
        var afterComme = numComme.split(',');
        afterComme = afterComme.toString();
        e.value = afterComme;
    }
};
